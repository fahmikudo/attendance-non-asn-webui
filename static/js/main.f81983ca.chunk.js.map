{"version":3,"sources":["components/login/login.js","components/qrcode/qrcode.js","cards/Percentage.js","cards/Piechart.js","cards/Linechart.js","cards/Barchart.js","cards/Statistic.js","components/dashboard/home.js","modules/popup/Profile.js","components/position/formposition.js","pages/PopUpAlert.js","services/Api.js","components/position/position.js","components/room/formroom.js","components/room/room.js","modules/popup/Time.js","components/schedule/formschedule.js","components/schedule/schedule.js","components/location/formlocation.js","components/location/location.js","modules/popup/Calendar.js","components/employee/formEmployee.js","components/employee/employee.js","components/attendance/attendance.js","components/report/report.js","App.js","serviceWorker.js","redux/eventtrackmiddleware.js","sagas/AuthSagas.js","sagas/index.js","services/ImmutablePersistenceTransform.js","config/reduxpersist.js","redux/index.js","redux/createstore.js","index.js","assets/img/logo.jpg","redux/AuthRedux.js","modules/custom/customTable.js"],"names":["Login","props","startFetch","LoadingBar","continousStart","onFinishFetch","complete","state","username","password","redirect","auth","user","handleChangeUsername","bind","handleChangePassword","handleSubmit","event","this","setState","target","value","preventDefault","login","newProps","fetching","error","payload","authRequest","console","info","push","to","history","Router","browserHistory","className","onRef","ref","style","margin","src","logo","alt","onSubmit","type","onChange","required","Component","connect","dispatch","obj","AuthAction","QrCode","uuid","v4","times","getData","me","setTimeout","refreshQRCode","log","class","position","width","level","size","textAlign","marginTop","onClick","Percentage","data","name","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","CardPieChart","activeIndex","onPieEnter","PieInfo","dt","val","length","key","color","marginRight","aspect","labelLine","label","dataKey","map","entry","uv","pv","amt","TITLE","CardLineChart","LineInfo","top","right","left","bottom","strokeDasharray","stackId","stroke","CardBartChart","BarInfo","Statistic","Home","cardPercentage","cardLinechart","cardBarchart","cardPie","cardStatistic","opActivePopup","clActivePopup","opContentPopup","clContentPopup","Profile","opProfile","profileClass","smallProfileClass","authLogout","float","height","logout","payloadDefault","FormPosition","onClickClose","action","e","onClickSave","positionName","readOnly","backgroundColor","placeholder","marginLeft","PopUp","fontSize","fontWeight","alignContent","onClickDelete","title","id","file","htmlFor","removeChange","create","api","access_token","localStorage","getItem","apisauce","baseURL","timeout","headers","Authorization","getAllPagingPosition","body","get","getAllPosition","postPosition","post","deletePosition","delete","getAllPagingRoom","postRoom","deleteRoom","getAllPagingEmployee","getAllEmployee","postEmployee","putEmployee","put","deleteEmployee","uploadFotoEmployee","downloadFotoEmployee","getAllPagingSchedule","postSchedule","deleteSchedule","getAllPagingLocation","postLocation","deleteLocation","getAllPagingAttendance","getAllAttendance","downloadReport","userAuth","getUserDetail","ct","require","options","customOptions","Position","opEditAble","editAble","clEditAble","openCreateForm","createVisible","openEditForm","editVisible","selectedIndex","openDeletePopup","deletePopUpVisible","openSavePopUp","savePopUpVisible","handleDelete","a","response","ok","status","table_limit","table_page","message","alert","handleUpdate","rawData","handlePopUp","getMuiTheme","createMuiTheme","customTable","columns","customBodyRender","tableMeta","rowIndex","dataTable","table_query","positionCount","limit","number","param","pageLimit","pageNumber","getCountData","tableOptions","serverSide","count","searchText","onTableChange","tableState","page","rowsPerPage","theme","buttonCreate","onCreate","FormRoom","roomName","Room","messagae","roomCount","Pages","timeState","time","t","hour","minute","p","focusStatue","prevProps","showTimezone","withoutIcon","disabled","timezone","onFocusChange","onTimeChange","defaultPayload","FormSchedule","handleChooseRoom","dataDetail","room","rowData","opChooseRoom","visibleChooseRoom","opChooseEmployee","visibleChooseEmployee","dataRoom","payloadRoom","dataTableRoom","onSave","employee","shift","description","Time","startTime","endTime","renderDetail","renderChooseRoom","renderChooseEmployee","Schedule","rawDataRoom","getDataRoom","firstName","lastName","FormLocation","locationName","latitude","longitude","Location","locationCount","clPlaceDate","dateContent","opPlaceDate","calendarVisible","handleClickOutside","handleChange","moment","handleSave","datePicker","handleSelectDate","clearDateField","dateField","date","format","element","document","querySelector","addEventListener","closest","contains","outsideclickListener","undefined","FormEmployee","openChoosePosition","onClickVisiblePosition","visiblePopupPosition","dataTablePosition","tablePosition","loading","imageUrl","getImageBlob","employeePhotoURL","fileName","res","config","url","acceptedFiles","formData","FormData","append","display","justifyContent","align","onDrop","getRootProps","getInputProps","marginBottom","birthPlace","Calendar","birthDate","role","address","contactNumber","email","nik","renderForm","renderPosition","Employee","M","rawDataPosition","getDataPosition","params","Attendance","attendanceDate","attendanceStatus","checkin","checkout","Report","startDate","endDate","newTgl","angle","opSubMenu","opMenu","App","appClass","appButtonClass","travelClass","travelSubmenu","travelMoreIcon","timeClass","timeSubmenu","timeMoreIcon","leaveClass","leaveSubmenu","leaveMoreIcon","overtimeClass","overtimeSubmenu","overtimeMoreIcon","employeeClass","employeeSubmenu","employeeMoreIcon","nextProps","onLogoOut","exact","path","component","opSlide","Boolean","window","location","hostname","match","eventTrackMiddleware","store","next","getAuth","call","atob","isEmpty","token","response_detail","setItem","userInfo","isLoggedIn","avatar","JSON","stringify","AuthActions","authSuccess","authFailure","root","empApi","API","all","takeLatest","AuthTypes","AUTH_REQUEST","isImmutable","R","fromImmutable","asMutable","deep","out","raw","Immutable","in","REDUX_PERSIST","active","reducerVersion","storeConfig","storage","storageSession","whitelist","transforms","immutablePersistenceTransform","reducers","combineReducers","reducer","finalReducers","ReduxPersist","persistConfig","persistReducer","rootReducer","rootSaga","middleware","enhancers","EventTrackMiddleware","sagaMiddleware","createSagaMiddleware","sagaMonitor","applyMiddleware","createStore","compose","sagasManager","run","configureStore","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","createActions","authUserUpdate","authLoginCheck","Types","Creators","INITIAL_STATE","AuthSelectors","request","merge","success","failure","userUpdate","createReducer","AUTH_SUCCESS","AUTH_FAILURE","AUTH_LOGOUT","AUTH_USER_UPDATE","AUTH_LOGIN_CHECK","typography","useNextVariants","overrides","MUIDataTable","paper","boxShadow","border","borderRadius","overflow","responsiveScroll","MuiToolbar","MUIDataTableToolbar","titleText","icon","iconActive","flex","actions","MUIDataTableSearch","main","zIndex","searchIcon","verticalAlign","clearIcon","MUIDataTableHead","MUIDataTableHeadRow","MUIDataTableHeadCell","fixedHeader","borderBottom","padding","toolButton","sortActive","sortAction","MuiButtonBase","MUIDataTableBodyCell","MUIDataTableSelectCell","headerCell","checkboxRoot","MuiInput","underline","MuiSelect","customTable2","selectableRows","filterType","responsive","rowsPerPageOptions","print","download","elevation","filter","viewColumns","customOptions2","customOptions3","sort"],"mappings":"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","file":"static/js/main.f81983ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Redirect } from \"react-router-dom\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport logo from './../../assets/img/logo.jpg';\r\nimport AuthAction from '../../redux/AuthRedux';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            redirect: props.auth.user ? true : false\r\n        }\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this)\r\n        this.handleChangePassword = this.handleChangePassword.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChangeUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.login()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (!newProps.auth.fetching) {\r\n            if (newProps.auth && !newProps.auth.error) {\r\n                this.setState({ redirect: true });\r\n                this.onFinishFetch()\r\n            } else {\r\n                this.onFinishFetch()\r\n            }\r\n        }\r\n    }\r\n\r\n    login() {\r\n        this.startFetch()\r\n        const { username, password } = this.state\r\n        let payload = {\r\n            username,\r\n            password\r\n        }\r\n        this.props.authRequest(payload);\r\n    }\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    render() {\r\n\r\n        console.info(this.state.redirect)\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/home\"></Redirect>\r\n        }\r\n\r\n        return (\r\n            <HashRouter history={Router.browserHistory}>\r\n                <div className=\"main-content\">\r\n                    <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                    <div className=\"app-login background-green\">\r\n                        <div className=\"login-small\">\r\n                            <div className=\"logo-faded\">\r\n                                <div\r\n                                    className=\"image image-circle background-white border-all\"\r\n                                    style={{ margin: \"auto\" }}>\r\n                                    <img src={logo} alt=\"\"></img>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"margin-10px grid grid-2x\">\r\n                                <div className=\"col-1\">\r\n                                    <div className=\"txt-site txt-16 txt-bold txt-main\">\r\n                                        Sign In\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"margin-15px\">\r\n                                    <div className=\"margin-bottom-5px txt-site txt-10 txt-main txt-bold\">\r\n                                        Username\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.handleChangeUsername}\r\n                                        required></input>\r\n                                </div>\r\n                                <div className=\"margin-15px\">\r\n                                    <div className=\"margin-bottom-5px txt-site txt-10 txt-main txt-bold\">\r\n                                        Password\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChangePassword}\r\n                                        required></input>\r\n                                </div>\r\n                                <div className=\"margin-15px\">\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Sign In\"\r\n                                        className=\"btn btn-width-all background-green\">\r\n                                    </input>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authRequest: obj => dispatch(AuthAction.authRequest(obj))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport QRCode from 'qrcode.react';\r\nimport uuid from 'uuid';\r\n\r\n\r\nclass QrCode extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            uuid: 'RSUD#' + uuid.v4(),\r\n            times: 15,\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        let me =this,times;\r\n        setTimeout(() => {\r\n            times = me.state.times - 1\r\n            this.setState({ times })\r\n            if (times === 0) {\r\n                // this.setState({ uuid: 'RSUD#' + uuid.v4(), times: 15 })\r\n                this.refreshQRCode();\r\n            }\r\n            this.getData()\r\n        }, 1000)\r\n    }\r\n\r\n    refreshQRCode() {\r\n        this.setState({ uuid: 'RSUD#' + uuid.v4(), times: 15 })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.uuid)\r\n        return (\r\n            <HashRouter history={Router.browserHistory}>\r\n                <div className=\"main-content\">\r\n                    <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                    <div className=\"app-login background-green\">\r\n                        <div class=\"login-content background-white\">\r\n                            <div class=\"padding-20px\">\r\n                                <h1 class=\"txt-site txt-20 txt-center txt-main txt-bold\">\r\n                                    Scan QR Code Disini Untuk Kehadiran\r\n                                </h1>\r\n                                <div class=\"padding-10px\"></div>\r\n                                <div style={{position: 'relative', width:'250px', margin: 'auto'}}>\r\n                                    <QRCode value={this.state.uuid} level=\"Q\" size={256} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"padding-10px\"></div>\r\n                            <div class=\"txt-site txt-13 txt-center txt-main txt-bold\">\r\n                                { this.state.times }\r\n                            </div>\r\n                            <div style={{textAlign: 'center', marginTop: '20px'}}>\r\n                                <button onClick={()=> this.refreshQRCode()} type=\"button\" class=\"btn btn-primary\">\r\n                                    Refresh QR Code Manual\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"padding-10px\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </HashRouter >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default QrCode","import React, { Component } from 'react'\r\n\r\nclass Percentage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card df-card\">\r\n                    \r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Percentage</div>\r\n        </div>\r\n\r\n        <div className=\"card-mid\">\r\n          <div className=\"c100 p25 default green card-center\">\r\n            <span>\r\n                25.5%\r\n            </span>\r\n            <div className=\"slice\" style={{margin: \"auto\"}}>\r\n                <div className=\"bar\"></div>\r\n                <div className=\"fill\"></div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"card-percentage border-50\">\r\n            <div className=\"percentage-info\">\r\n              <div className=\"percentage-title\">\r\n                  50%\r\n              </div>\r\n              <div className=\"percentage-subtitle\">\r\n                  Percentage\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Percentage","import React, { Component } from 'react'\r\nimport {\r\n  PieChart, Pie, Cell, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 'Group Pie A', value: 400 },\r\n  { name: 'Group Pie B', value: 300 },\r\n  { name: 'Group Pie C', value: 300 },\r\n  { name: 'Group Pie D', value: 200 },\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n}) => {\r\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nclass CardPieChart extends Component {\r\n\t\r\n\tstate = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n                    \r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Inbox Date</div>\r\n        </div>\r\n\r\n        <div className=\"padding-bottom-10px txt-site txt-11\">\r\n          <ResponsiveContainer \r\n            width='100%' \r\n            aspect={4.0/2.8}>\r\n\t        \t<PieChart style={{\r\n\t        \t\tmargin: 'auto',\r\n\t        \t\t}}>\r\n\t\t\t        <Pie\r\n\t\t\t          data={data}\r\n\t\t\t          labelLine={false}\r\n\t\t\t          label={renderCustomizedLabel}\r\n\t\t\t          outerRadius={90}\r\n\t\t\t          fill=\"#8884d8\"\r\n\t\t\t          dataKey=\"value\"\r\n\t\t\t        >\r\n\t\t\t          {\r\n\t\t\t            data.map(\r\n\t\t\t            \t(entry, index) => <Cell \r\n\t\t\t            \t\tkey={`cell-${index}`} \r\n\t\t\t            \t\tfill={COLORS[index % COLORS.length]} />\r\n\t\t\t            )\r\n\t\t\t          }\r\n\t\t\t        </Pie>\r\n\t\t\t      </PieChart>\r\n          </ResponsiveContainer>\r\n\r\n          <div className=\"padding-15px\">\r\n            <div>\r\n              { this.PieInfo() }\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  PieInfo = () => {\r\n    let dt = []\r\n    let val = data.length\r\n\r\n    for (let index = 0; index < val; index++) {\r\n      dt.push(\r\n        <div className=\"margin-5px\" key={index}>\r\n          <span className=\"fa fa-lw fa-circle\" style={{color: COLORS[index], marginRight: \"7.5px\"}} /> \r\n          <span className=\"txt-site txt-main txt-thin txt-11\">{ data[index].name }</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return dt\r\n  }\r\n\r\n}\r\n\r\nexport default CardPieChart","import React, { Component } from 'react'\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nconst TITLE = ['UV', 'PV', 'AMT'];\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658'];\r\n\r\nclass CardLineChart extends Component {\r\n\t\r\n\tstate = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Line Chart</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"padding-10px txt-site txt-9\">\r\n          <ResponsiveContainer \r\n            width='100%' \r\n            aspect={4.0/2.8}>\r\n            <AreaChart \r\n              data={data}\r\n              margin={{\r\n                top: 0, right: 0, left: 0, bottom: 0,\r\n              }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Area \r\n                type=\"monotone\" \r\n                dataKey=\"uv\" \r\n                stackId=\"1\" \r\n                stroke=\"#8884d8\" \r\n                fill=\"#8884d8\" />\r\n              <Area \r\n                type=\"monotone\" \r\n                dataKey=\"pv\" \r\n                stackId=\"1\" \r\n                stroke=\"#82ca9d\" \r\n                fill=\"#82ca9d\" />\r\n              <Area \r\n                type=\"monotone\" \r\n                dataKey=\"amt\" \r\n                stackId=\"1\" \r\n                stroke=\"#ffc658\" \r\n                fill=\"#ffc658\" />\r\n            </AreaChart>\r\n            </ResponsiveContainer>\r\n\r\n            <div className=\"padding-15px\">\r\n              <div className=\"display-flex-normal txt-site txt-center\" style={{margin: 'auto'}}>\r\n                { this.LineInfo() }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  LineInfo = () => {\r\n    let dt = []\r\n    let val = TITLE.length\r\n\r\n    for (let index = 0; index < val; index++) {\r\n      dt.push(\r\n        <div className=\"padding-5px\" key={index}>\r\n          <span className=\"fa fa-lw fa-circle\" style={{color: COLORS[index]}} /> { TITLE[index] }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return dt\r\n  }\r\n\r\n}\r\n\r\nexport default CardLineChart","import React, { Component } from 'react'\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 8, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 18, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nconst TITLE = ['UV', 'PV', 'AMT'];\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658'];\r\n\r\nclass CardBartChart extends Component {\r\n\t\r\n\tstate = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Bar Chart</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"padding-10px txt-site txt-9\">\r\n            <ResponsiveContainer \r\n              width='100%' \r\n              aspect={4.0/2.8}>\r\n              <BarChart\r\n                data={data}\r\n                margin={{\r\n                  top: 0, right: 0, left: 0, bottom: 0,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                {/*<Legend />*/}\r\n                <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n\r\n            <div className=\"padding-15px\">\r\n              <div className=\"display-flex-normal txt-site txt-center\" style={{margin: 'auto'}}>\r\n                { this.BarInfo() }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  BarInfo = () => {\r\n    let dt = []\r\n    let val = TITLE.length\r\n\r\n    for (let index = 0; index < val; index++) {\r\n      dt.push(\r\n        <div className=\"padding-5px\" key={index}>\r\n          <span className=\"fa fa-lw fa-circle\" style={{color: COLORS[index]}} /> { TITLE[index] }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return dt\r\n  }\r\n\r\n}\r\n\r\nexport default CardBartChart","import React, { Component } from 'react'\r\n\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Statistik</div>\r\n        </div>\r\n        <div className=\"padding-15px\">\r\n          <div className=\"margin-10px txt-site txt-primary txt-12\">\r\n              Customers\r\n          </div>\r\n          <div className=\"margin-15px txt-site txt-main txt-40 txt-bold\">\r\n              36,254\r\n          </div>\r\n          <div className=\"margin-top-10px txt-site txt-green txt-11\">\r\n              <i className=\"fa fa-lw fa-arrow-up\"></i>\r\n              5.27%\r\n          </div>\r\n          <div className=\"margin-bottom-10px txt-site txt-primary txt-11\">\r\n              Since last month\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Statistic","import React, { Component } from 'react'\r\nimport CardPercentage from '../../cards/Percentage'\r\nimport CardPiechart from '../../cards/Piechart'\r\nimport CardLinechart from '../../cards/Linechart'\r\nimport CardBarchart from '../../cards/Barchart'\r\nimport CardStatistic from '../../cards/Statistic'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n    }\r\n\r\n    cardPercentage = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardPercentage key={index}></CardPercentage>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardLinechart = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardLinechart key={index}></CardLinechart>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardBarchart = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardBarchart key={index}></CardBarchart>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardPie = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardPiechart key={index}></CardPiechart>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardStatistic = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardStatistic key={index}></CardStatistic>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"main-content\">\r\n                <div className=\"display-flex-mobile\">\r\n                    {this.cardStatistic(2)}\r\n                    {this.cardPercentage(2)}\r\n                </div>\r\n                <div className=\"display-flex-mobile\">\r\n                    {this.cardPie(3)}\r\n                </div>\r\n                <div className=\"display-flex-mobile\">\r\n                    {this.cardBarchart(1)}\r\n                    {this.cardLinechart(1)}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport AuthAction from '../../redux/AuthRedux'\r\nimport { connect } from 'react-redux'\r\n\r\nvar opActivePopup = 'app-small-profile active'\r\nvar clActivePopup = 'app-small-profile'\r\n\r\nvar opContentPopup = 'app-menu-popup'\r\nvar clContentPopup = 'app-menu-popup app-menu-popup-hide'\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      profileClass: clContentPopup,\r\n      smallProfileClass: clActivePopup\r\n    }\r\n  }\r\n\r\n  opProfile = () => {\r\n    if (this.state.profileClass === clContentPopup) {\r\n      this.setState({ profileClass: opContentPopup })\r\n      this.setState({ smallProfileClass: opActivePopup })\r\n    } else {\r\n      this.setState({ profileClass: clContentPopup })\r\n      this.setState({ smallProfileClass: clActivePopup })\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.props.authLogout()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          onClick={this.opProfile}\r\n          className={this.state.smallProfileClass}\r\n          style={{ float: 'right' }}>\r\n          <div className=\"asp-col-1\">\r\n            <div className=\"image image-circle image-30px background-green\">\r\n              <img width=\"100%\" height=\"100%\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"asp-col-2\">\r\n            <div className=\"ttl\">\r\n              <i className=\"fa fa-lw fa-angle-down txt-site txt-primary txt-16\" />\r\n            </div>\r\n            {/*<div className=\"ttl\">\r\n              <div className=\"txt-site txt-main txt-12 txt-cap\">\r\n              \tAdmin\r\n              </div>\r\n            </div>*/}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{ top: \"45px\", width: \"200px\" }}\r\n          className={this.state.profileClass}>\r\n          <ul>\r\n            <NavLink to=\"/\">\r\n              <li onClick={this.logout.bind(this)}>\r\n                <i className=\"icn fa fa-lw fa-user\"></i>\r\n                Profile\r\n              </li>\r\n            </NavLink>\r\n            <NavLink to=\"/\">\r\n              <li onClick={this.logout.bind(this)}>\r\n                <i className=\"icn fa fa-lw fa-power-off\"></i>\r\n                Logout\r\n              </li>\r\n            </NavLink>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authLogout: () => dispatch(AuthAction.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { Component } from \"react\";\r\n\r\n\r\nconst payloadDefault = {\r\n    \"positionName\": ''\r\n}\r\n\r\n\r\nclass FormPosition extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.data ? props.data : \r\n            {\r\n                payloadDefault\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        console.info(this.state.data)\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-mikro background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Jabatan\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Jabatan\"\r\n                                        : \"View - Jabatan\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\" \r\n                        onSubmit={(e) => { e.preventDefault() \r\n                            this.props.onClickSave(this.state.data.positionName) }\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Nama Jabatan\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Nama Jabatan\"\r\n                                    required\r\n                                    value={this.state.data.positionName}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                positionName: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-green\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-white\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormPosition;","import React, { Component } from 'react'\r\n\r\nclass PopUp extends Component {\r\n   render() {\r\n        return (\r\n        this.props.type === 'save' ?\r\n        <div className={this.props.class}>\r\n            <div className=\"padding-top-20px\"></div>\r\n            <div className=\"popup-content background-white border-radius\" style={{width: '20%'}}>\r\n              <div className=\"padding-15px background-white grid grid-2x\">\r\n                <div className=\"col-1\">\r\n                  <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                    Information\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-2 content-right\">\r\n                  <button className=\"btn btn-circle background-white\" onClick={ this.props.onClick }>\r\n                    <i className=\"fa fa-lg fa-times\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n                        \r\n              <div style={{textAlign: 'center', marginTop:10, color:'green', fontSize:44}}>\r\n                <i className=\"fa fa-lw fa-check-circle\"/>\r\n              </div>                        \r\n              <div className=\"padding-20px\" style={{textAlign: 'center', fontWeight:'bold'}}>\r\n                  PROCESS SUCCESSFULL!\r\n              </div>\r\n              <div className=\"padding-15px\" style={{textAlign: 'center'}}>\r\n                <button \r\n                    className=\"btn padding-5px\" \r\n                    type=\"button\"\r\n                    style={{width:'50%', backgroundColor:'#6495ED', color:'white'}}\r\n                    onClick={ this.props.onClick }>\r\n                    <span>OK, GOT IT!</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"padding-bottom-20px\"></div>\r\n        </div> :\r\n\r\n        this.props.type === 'delete' ?\r\n        <div className={this.props.class}>\r\n            <div className=\"padding-top-20px\"></div>\r\n                <div className=\"popup-content border-radius\" style={{width: '30%', backgroundColor:'#FF7F50'}}>\r\n                <div className=\"grid grid-2x padding-15px\">\r\n                    <div className=\"col-1\" style={{textAlign: 'center', backgroundColor:'#FF7F50', color:'white'}}>\r\n                    <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                        Your Attention is Required\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-2 content-right\">\r\n                    <button className=\"btn btn-circle\" style={{backgroundColor:'#FF7F50', color:'white'}} onClick={ this.props.onClick }>\r\n                        <i className=\"fa fa-lg fa-times\"></i>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{textAlign: 'center', marginTop:10, color:'white', fontSize:44}}>\r\n                    <i className=\"fa fa-lw fa-bell\"/>\r\n                </div>                        \r\n                <div className=\"padding-20px\" style={{textAlign: 'center', fontWeight:'bold', color:'white'}}>\r\n                    Apakah Anda Yakin Menghapus Data Ini ?\r\n                </div>\r\n                <div className=\"padding-15px grid grid-2x\" style={{alignContent: 'center'}}>\r\n                    <div className=\"col-1\">\r\n                    <button \r\n                        className=\"btn padding-5px\"\r\n                        type=\"button\"\r\n                        onClick={ this.props.onClickDelete }>\r\n                        <span>OK, GOT IT!</span>\r\n                    </button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                    <button \r\n                        className=\"btn padding-5px\" \r\n                        type=\"button\"\r\n                        onClick={ this.props.onClick }>\r\n                        <span>CLOSE</span>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"padding-bottom-20px\"></div>\r\n        </div> :\r\n\r\n        <div className={this.props.class}>\r\n          <div className=\"popup-content-mikro background-white border-radius post-center\">\r\n            \r\n            <div className=\"padding-15px background-white border-bottom grid grid-2x\">\r\n              <div className=\"col-1\">\r\n                  <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                    {this.props.title}\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-2 content-right\">\r\n                  <button \r\n                    className=\"btn btn-circle btn-grey\" \r\n                    onClick={ this.props.onClick }>\r\n                      <i className=\"fa fa-lg fa-times\"></i>\r\n                  </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"padding-15px background-grey\">\r\n\r\n              <input \r\n                type=\"file\" \r\n                id=\"upload-image\" \r\n                style={{'display': 'none'}}\r\n                onChange={this.props.onChange} />\r\n\r\n              <input \r\n                type=\"file\" \r\n                id=\"upload-image\" \r\n                style={{'display': 'none'}}\r\n                onChange={this.props.onChange} />\r\n\r\n              \r\n                <div className=\"upload-image\">\r\n\r\n                  <div className=\"u-i-info\">\r\n                    <div className=\"u-i-icon\">\r\n                      <i className=\"fa fa-lg fa-images\" />\r\n                    </div>\r\n                    <div className=\"u-i-label\">\r\n                      Upload a file\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div \r\n                    className=\"u-i-image image image-all\"\r\n                    style={{'backgroundImage': 'url('+this.props.file+')'}}>\r\n\r\n                      <div className=\"u-i-btn\">\r\n                        <label htmlFor=\"upload-image\">\r\n                          <div className=\"btn btn-circle-div btn-green border-all\">\r\n                            <i className=\"fa fa-lg fa-plus\" />\r\n                          </div>\r\n                        </label>\r\n                        <button \r\n                          onClick={this.props.removeChange}\r\n                          type=\"button\"\r\n                          className=\"btn btn-circle btn-red border-all\">\r\n                          <i className=\"fa fa-lg fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n\r\n                  </div>\r\n                </div>\r\n              \r\n              \r\n              <div className=\"grid margin-top-15px\">\r\n                <div className=\"content-right\">\r\n                  <button className=\"btn background-blue\"\r\n                    onClick={ this.props.onClick }>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopUp\r\n\r\n\r\n","import apisauce from 'apisauce'\r\n\r\nconst create = (type = '') => {\r\n\r\n    let api\r\n    const access_token = localStorage.getItem(\"access_token\") || \"\"\r\n    \r\n    switch(type) {\r\n        case 'POSITION':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'ATTENDANCE':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'ROOM':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'EMPLOYEE':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'SCHEDULE':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'LOCATION':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'REPORT':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + access_token\r\n                }\r\n            })\r\n            break\r\n        case 'USERAUTH':\r\n            api = apisauce.create({\r\n                baseURL: 'http://35.238.229.74:8080',\r\n                timeout: 30000,\r\n            })\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    const getAllPagingPosition = body => api.get('/position/paging' , body)\r\n    const getAllPosition = body => api.get('/position' , body)\r\n    const postPosition = body => api.post('/position', body)\r\n    const deletePosition = body => api.delete('/position/' + body)\r\n\r\n    const getAllPagingRoom = body => api.get('/room/paging', body)\r\n    const postRoom = body => api.post('/room', body)\r\n    const deleteRoom = body => api.delete('/room/' + body)\r\n\r\n    const getAllPagingEmployee = body => api.get('/employee', body)\r\n    const getAllEmployee = body => api.get('/employee/paging', body)\r\n    const postEmployee = body => api.post('/employee/post', body)\r\n    const putEmployee = body => api.put('/employee/put', body)\r\n    const deleteEmployee = body => api.delete('/employee/' + body)\r\n    const uploadFotoEmployee = body => api.post('/employee/uploadFoto', body)\r\n    const downloadFotoEmployee = body => api.get('/employee/downloadFile/' + body)\r\n\r\n    const getAllPagingSchedule = body => api.get('/schedule/paging', body)\r\n    const postSchedule = body => api.post('/schedule', body)\r\n    const deleteSchedule = body => api.delete('/schedule/' + body)\r\n\r\n    const getAllPagingLocation = body => api.get('/location/paging', body)\r\n    const postLocation = body => api.post('/location', body)\r\n    const deleteLocation = body => api.delete('/location/' + body)\r\n\r\n    const getAllPagingAttendance = body => api.get('/attendance/paging', body)\r\n    const getAllAttendance = body => api.get('/attendance', body)\r\n\r\n    const downloadReport = body => api.get('/report/attendance.report', body, {\r\n        headers: {\r\n            Authorization: \"Bearer \" + access_token\r\n        }\r\n    })\r\n\r\n    const userAuth = body => api.post('/employee/login', body)\r\n\r\n    const getUserDetail = body => api.get('/employee/isLogin', {}, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + body\r\n        }\r\n    })\r\n\r\n    return {\r\n        getAllPagingPosition,\r\n        getAllPosition,\r\n        postPosition,\r\n        deletePosition,\r\n        userAuth,\r\n        getUserDetail,\r\n        getAllPagingRoom,\r\n        postRoom,\r\n        deleteRoom,\r\n        getAllPagingSchedule,\r\n        postSchedule,\r\n        deleteSchedule,\r\n        getAllPagingLocation,\r\n        postLocation,\r\n        deleteLocation,\r\n        getAllPagingEmployee,\r\n        getAllEmployee,\r\n        postEmployee,\r\n        putEmployee,\r\n        deleteEmployee,\r\n        uploadFotoEmployee,\r\n        downloadFotoEmployee,\r\n        getAllPagingAttendance,\r\n        getAllAttendance,\r\n        downloadReport\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default { create }","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport FormPosition from \"./formposition\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\nconst options = ct.customOptions();\r\n\r\nclass Position extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            savePopUpVisible: false,\r\n            table_limit: 5,\r\n            table_page: 0,\r\n            table_query: \"\",\r\n            positionCount: 0,\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n\r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    openSavePopUp = () => {\r\n        this.setState({ savePopUpVisible: !this.state.savePopUpVisible })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startFetch();\r\n        this.getData(this.state.table_limit, this.state.table_page);\r\n    }\r\n\r\n    handleDelete = async () => {\r\n        this.setState({ deletePopUpVisible: false })\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            \"positionName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('POSITION').postPosition(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            \"positionName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('POSITION').postPosition(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleDelete = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            \"positionName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('POSITION').deletePosition(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ deletePopUpVisible: false })\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.getData()\r\n        this.setState({\r\n            savePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false\r\n        })\r\n    }\r\n\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    async getData(limit, number) {\r\n\r\n        let param = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('POSITION').getAllPagingPosition(param)\r\n        if (response.status === 200) {\r\n            let dataTable = response.data.map((value, index) => {\r\n                const { positionName } = value;\r\n                return [\r\n                    // index += 1,\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    positionName\r\n                ]\r\n            })\r\n\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n        this.getCountData()\r\n        console.log(response)\r\n    }\r\n\r\n    async getCountData() {\r\n\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('POSITION').getAllPagingPosition(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                positionCount: response.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"Nama Jabatan\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-green btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openEditForm(tableMeta.rowIndex)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-red btn-small-circle\"\r\n                                onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n        let { positionCount, table_query } = this.state\r\n        let tableOptions = {\r\n            ...options,\r\n            serverSide: true,\r\n            count: positionCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText : \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                {/* <div className=\"col-2 content-right\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-circle background-green\"\r\n                        style={{ marginRight: 5 }}\r\n                        onClick={this.openCreateForm.bind(this)}\r\n                    >\r\n                        <i className=\"fa fa-1x fa-plus\" />\r\n                    </button>\r\n                </div> */}\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Jabatan\"}\r\n                            key={positionCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.createVisible && (\r\n                    <FormPosition\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormPosition\r\n                        type={\"update\"}\r\n                        data={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.savePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"save\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClick={this.handlePopUp.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Position","import React, { Component } from \"react\";\r\n\r\nconst payloadDefault = {\r\n    \"roomName\": ''\r\n}\r\n\r\n\r\nclass FormRoom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.data ? props.data :\r\n            {\r\n                payloadDefault\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-mikro background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Ruangan\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Ruangan\"\r\n                                        : \"View - Ruangan\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\"\r\n                        onSubmit={(e) => {e.preventDefault()\r\n                            this.props.onClickSave(this.state.data.roomName)}\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Nama Ruangan\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Nama Ruangan\"\r\n                                    required\r\n                                    value={this.state.data.roomName}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                roomName: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-green\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-white\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormRoom;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport FormRoom from \"./formroom\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\nconst options = ct.customOptions();\r\n\r\nclass Room extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            savePopUpVisible: false,\r\n            table_limit: 5,\r\n            table_page: 0,\r\n            table_query: \"\",\r\n            roomCount: 0,\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n\r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    openSavePopUp = () => {\r\n        this.setState({ savePopUpVisible: !this.state.savePopUpVisible })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startFetch();\r\n        this.getData(this.state.table_limit, this.state.table_page);\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.getData()\r\n        this.setState({\r\n            savePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            \"roomName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('ROOM').postRoom(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if(response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            \"roomName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('ROOM').postRoom(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.messagae)\r\n        }\r\n    }\r\n\r\n    handleDelete = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            \"roomName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('ROOM').deleteRoom(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ deletePopUpVisible: false })\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    async getData(limit, number){\r\n        let param = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('ROOM').getAllPagingRoom(param)\r\n        if(response.status === 200){\r\n            let dataTable = response.data.map((value, index) => {\r\n                const { roomName } = value;\r\n                return [\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    roomName\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n        this.getCountData()\r\n        console.log(response)\r\n\r\n    }\r\n\r\n    async getCountData() {\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('ROOM').getAllPagingRoom(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                roomCount: response.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"Nama Ruangan\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-green btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openEditForm(tableMeta.rowIndex)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-red btn-small-circle\"\r\n                                onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n\r\n        let { roomCount, table_query } = this.state\r\n        let tableOptions = {\r\n            ...options,\r\n            serverSide: true,\r\n            count: roomCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText: \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                {/* <div className=\"col-2 content-right\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-circle background-green\"\r\n                        style={{ marginRight: 5 }}\r\n                        onClick={this.openCreateForm.bind(this)}\r\n                    >\r\n                        <i className=\"fa fa-1x fa-plus\" />\r\n                    </button>\r\n                </div> */}\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Ruangan\"}\r\n                            key={roomCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.createVisible && (\r\n                    <FormRoom\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormRoom\r\n                        type={\"update\"}\r\n                        data={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.savePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"save\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClick={this.handlePopUp.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Room","import React, { Component } from 'react'\r\nimport TimePicker from 'react-times'\r\n\r\nclass Pages extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      timeState: this.props.time ? this.props.time : \"\"\r\n    }\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('time', this.props.time)\r\n  // }\r\n\r\n  onTimeChange(options) {\r\n    // do something\r\n    var t = options.hour + ':' + options.minute\r\n    var p = options.hour + ':' + options.minute + ':00'\r\n\r\n    // console.log('now', t)\r\n\r\n    this.setState({\r\n      timeState: t\r\n    })\r\n\r\n    this.props.onChange(p)\r\n\r\n  }\r\n\r\n  onFocusChange(focusStatue) {\r\n    // do something\r\n    // console.log(focusStatue)\r\n\r\n    // if (focusStatue === false) {\r\n    //   var p = this.state.timeState\r\n\r\n    //   console.log('time', p)\r\n    //   this.props.onChange(p)\r\n    // }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.time !== prevProps.time) {\r\n      this.setState({\r\n        timeState: this.props.time\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-time-picker\">\r\n        <TimePicker\r\n          showTimezone\r\n          // focused\r\n          withoutIcon\r\n          time={this.state.timeState}\r\n          disabled={this.props.disabled}\r\n          // theme=\"material\"\r\n          // timeMode=\"12\"\r\n          timezone=\"Asia/Jakarta\"\r\n          onFocusChange={this.onFocusChange.bind(this)}\r\n          onTimeChange={this.onTimeChange.bind(this)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pages","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport TimePicker from \"../../modules/popup/Time\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\");\r\n\r\nlet defaultPayload = {\r\n    \"description\": \"\",\r\n    \"employee\": {\r\n        \"id\": 1\r\n    },\r\n    \"endTime\": \"\",\r\n    \"id\": \"\",\r\n    \"room\": {\r\n        \"id\": \"\"\r\n    },\r\n    \"shift\": \"\",\r\n    \"startTime\": \"\"\r\n  }\r\n\r\n\r\nclass FormSchedule extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataDetail: props.payload \r\n                ? props.payload\r\n                : defaultPayload,\r\n            dataRoom: props.payloadRoom ? props.payloadRoom : [],\r\n            dataTableRoom: [],\r\n            visibleChooseRoom: false,\r\n            visibleChooseEmployee: false,\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable())\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Nama Ruangan\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div className=\"display-flex-normal\">\r\n                            <button\r\n                                className=\"btn btn-green btn-small-circle\"\r\n                                onClick={() =>\r\n                                    this.handleChooseRoom(tableMeta)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-plus\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.payloadRoom)\r\n\r\n        if (this.props.payloadRoom) {\r\n            let dataTableRoom = this.props.payloadRoom.map((value, index) => {\r\n                let {id, roomName} = value\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    roomName\r\n                ]\r\n            })\r\n\r\n            this.setState({dataTableRoom})\r\n        }\r\n    }\r\n\r\n    handleChooseRoom = (data) => {\r\n        this.setState({\r\n            dataDetail: {\r\n                ...this.state.dataDetail,\r\n                room: {\r\n                    id: data.rowData[1],\r\n                }\r\n            }\r\n        })\r\n        this.opChooseRoom()\r\n    }\r\n\r\n    opChooseRoom = () => {\r\n        this.setState({visibleChooseRoom: !this.state.visibleChooseRoom})\r\n    }\r\n\r\n    opChooseEmployee = () => {\r\n        this.setState({visibleChooseEmployee: !this.state.visibleChooseEmployee})\r\n    }\r\n\r\n    renderChooseRoom () {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-small background-white border-radius\">\r\n\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                Pilih Ruangan\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.opChooseRoom}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Ruangan\"}\r\n                                data={this.state.dataTableRoom}\r\n                                columns={this.columns}\r\n                                options={this.options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px border-top\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-white\"\r\n                                    type=\"button\"\r\n                                    onClick={this.opChooseRoom}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderChooseEmployee () {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-small background-white border-radius\">\r\n\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                Pilih Pegawai\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.opChooseEmployee}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\"></div>\r\n\r\n                    <div className=\"padding-15px border-top\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-white\"\r\n                                    type=\"button\"\r\n                                    onClick={this.opChooseEmployee}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDetail() {\r\n        let {dataDetail} = this.state\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-small background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Jadwal\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Jadwal\"\r\n                                        : \"View - Jadwal\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form \r\n                        action=\"#\" \r\n                        onSubmit={(e) => { \r\n                            e.preventDefault() \r\n                            this.props.onSave(this.state.dataDetail) \r\n                        }}>\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Pilih Ruangan\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"card-date-picker\">\r\n                                    <div className=\"double\">\r\n                                        <div className=\"input\">\r\n                                            <input\r\n                                                style={{ backgroundColor: \"#E6E6E6\" }}\r\n                                                type=\"text\"\r\n                                                className=\"ip\"\r\n                                                readOnly\r\n                                                value={dataDetail.room.id}\r\n                                            />\r\n                                        </div>\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"btn btn-grey border-left btn-no-radius\" \r\n                                            onClick={this.opChooseRoom}>\r\n                                            <i className=\"fa fa-lg fa-search\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Pilih Pegawai\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"card-date-picker\">\r\n                                    <div className=\"double\">\r\n                                        <div className=\"input\">\r\n                                            <input\r\n                                                style={{ backgroundColor: \"#E6E6E6\" }}\r\n                                                type=\"text\"\r\n                                                className=\"ip\"\r\n                                                readOnly\r\n                                                value={dataDetail.employee.id}\r\n                                            />\r\n                                        </div>\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"btn btn-grey border-left btn-no-radius\" \r\n                                            onClick={this.opChooseEmployee}>\r\n                                            <i className=\"fa fa-lg fa-search\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Shift\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"\"\r\n                                    required\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            dataDetail: {\r\n                                                ...this.state.dataDetail,\r\n                                                shift: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    value={dataDetail.shift}\r\n                                />\r\n                            </div>\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Deskripsi\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"\"\r\n                                    required\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            dataDetail: {\r\n                                                ...this.state.dataDetail,\r\n                                                description: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    value={dataDetail.description}\r\n                                />\r\n                            </div>\r\n                            <div className=\"margin-bottom-20px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <div className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        <h4>\r\n                                            Start Time <span style={{ color: \"red\" }}>*</span>\r\n                                        </h4>\r\n                                    </div>\r\n                                </div>\r\n                                <TimePicker \r\n                                    time={dataDetail.startTime} \r\n                                    onChange={(e) => this.setState({\r\n                                        dataDetail: {\r\n                                            ...this.state.dataDetail,\r\n                                            startTime: e\r\n                                        }\r\n                                    })} />\r\n                            </div>\r\n                            <div className=\"margin-bottom-20px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <div className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        <h4>\r\n                                            End Time <span style={{ color: \"red\" }}>*</span>\r\n                                        </h4>\r\n                                    </div>\r\n                                </div>\r\n                                <TimePicker \r\n                                    time={dataDetail.endTime} \r\n                                    onChange={(e) => this.setState({\r\n                                        dataDetail: {\r\n                                            ...this.state.dataDetail,\r\n                                            endTime: e\r\n                                        }\r\n                                    })} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-green\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-white\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n               { this.renderDetail() }\r\n\r\n               { this.state.visibleChooseRoom && this.renderChooseRoom() }\r\n\r\n               { this.state.visibleChooseEmployee && this.renderChooseEmployee() }\r\n           </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormSchedule;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport FormSchedule from \"./formschedule\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nclass Schedule extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            rawDataRoom: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            table_limit: 100,\r\n            table_page: 0,\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n \r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startFetch();\r\n        this.getData(this.state.table_limit, this.state.table_page);\r\n        this.getDataRoom(this.state.table_limit, this.state.table_page);\r\n    }\r\n\r\n    handleDelete = async () => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n        }\r\n        // console.info('payload ==> ', payload)\r\n        let response = await api.create('SCHEDULE').deleteSchedule(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ deletePopUpVisible: false })\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            ...data\r\n        }\r\n\r\n        // console.log(payload)\r\n\r\n        let response = await api.create('SCHEDULE').postSchedule(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ createVisible: false, editVisible: false })\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    async getData(limit, number) {\r\n        let param = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('SCHEDULE').getAllPagingSchedule(param)\r\n        if (response.status === 200) {\r\n            let dataTable = response.data.map((value, index) => {\r\n                let { shift, startTime, endTime, employee, room } = value\r\n                return [\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    employee.firstName + ' ' + employee.lastName,\r\n                    room.roomName,\r\n                    shift,\r\n                    startTime,\r\n                    endTime\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n    }\r\n\r\n    async getDataRoom(limit, number) {\r\n        let param = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('ROOM').getAllPagingRoom(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                rawDataRoom: response.data\r\n            })\r\n            this.onFinishFetch()\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n    }\r\n\r\n    // async getDataEmployee(limit, number) {\r\n    //     let param = {\r\n    //         pageLimit: limit,\r\n    //         pageNumber: number\r\n    //     }\r\n\r\n    //     let response = await api.create('EMPLOYEE').getAllPagingRoom(param)\r\n    //     if (response.status === 200) {\r\n    //         let dataTableRoom = response.data.map((value, index) => {\r\n    //             let { id } = value\r\n    //             return [\r\n    //                 index += (1 + (this.state.table_page * this.state.table_limit)),\r\n    //             ]\r\n    //         })\r\n    //         this.setState({\r\n    //             rawDataRoom: response.data,\r\n    //             dataTableRoom\r\n    //         })\r\n    //         this.onFinishFetch()\r\n    //     } else {\r\n    //         this.onFinishFetch()\r\n    //     }\r\n    // }\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"Nama Pegawai\",\r\n        \"Nama Ruangan\",\r\n        \"Shift\",\r\n        \"Jam Masuk\",\r\n        \"Jam Pulang\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div className=\"display-flex-normal\">\r\n                            <button\r\n                                className=\"btn btn-green btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openEditForm(tableMeta.rowIndex)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-red btn-small-circle\"\r\n                                onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Jadwal\"}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={this.options}\r\n                            buttonCreate={true}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.createVisible && (\r\n                    <FormSchedule\r\n                        type={\"create\"}\r\n                        payloadRoom={this.state.rawDataRoom}\r\n                        onClickClose={this.openCreateForm}\r\n                        onSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormSchedule\r\n                        type={\"update\"}\r\n                        payload={this.state.rawData[this.state.selectedIndex]}\r\n                        payloadRoom={this.state.rawDataRoom}\r\n                        onClickClose={this.openEditForm}\r\n                        onSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule","import React, { Component } from 'react';\r\n\r\nconst payloadDefault = {\r\n    \"locationName\": \"\",\r\n    \"latitude\": \"\",\r\n    \"longitude\": \"\",\r\n    \"radius\": \"\"\r\n}\r\n\r\n\r\nclass FormLocation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.data ? props.data : payloadDefault\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        let { data } = this.state\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-mikro background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Lokasi\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Lokasi\"\r\n                                        : \"View - Lokasi\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\" \r\n                        onSubmit={(e) => { e.preventDefault() \r\n                            this.props.onClickSave(this.state.data) }\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Nama Lokasi\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Nama Lokasi\"\r\n                                    required\r\n                                    value={data.locationName}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                locationName: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Latitude\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Latitude\"\r\n                                    required\r\n                                    value={data.latitude}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                latitude: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Longitude\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Longitude\"\r\n                                    required\r\n                                    value={data.longitude}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                longitude: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Radius\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Radius\"\r\n                                    required\r\n                                    value={data.radius}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                radius: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-green\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-white\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FormLocation","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport FormLocation from \"./formlocation\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\nconst options = ct.customOptions();\r\n\r\nclass Location extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            savePopUpVisible: false,\r\n            table_limit: 5,\r\n            table_page: 0,\r\n            table_query: \"\",\r\n            locationCount: 0,\r\n        }\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n\r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    openSavePopUp = () => {\r\n        this.setState({ savePopUpVisible: !this.state.savePopUpVisible })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    componentDidMount() {\r\n        this.startFetch();\r\n        this.getData(this.state.table_limit, this.state.table_page);\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.getData()\r\n        this.setState({\r\n            savePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        console.log(\"DATA\", data)\r\n        let payload = {\r\n            ...data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('LOCATION').postLocation(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            ...data\r\n        }\r\n        let response = await api.create('LOCATION').postLocation(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleDelete = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id\r\n        }\r\n        let response = await api.create('LOCATION').deleteLocation(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({deletePopUpVisible: false})\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    async getData(limit, number){\r\n        let param = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('LOCATION').getAllPagingLocation(param)\r\n        if (response.status === 200) {\r\n            let dataTable = response.data.map((value, index) => {\r\n                const { locationName, latitude, longitude, radius } = value\r\n                return [\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    locationName,\r\n                    latitude,\r\n                    longitude,\r\n                    radius\r\n                ]\r\n            })\r\n\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n\r\n        this.getCountData()\r\n        console.log(response)\r\n\r\n\r\n    }\r\n\r\n    async getCountData() {\r\n\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('LOCATION').getAllPagingLocation(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                locationCount: response.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"Nama Lokasi\",\r\n        \"Latitude\",\r\n        \"Longitude\",\r\n        \"Radius\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-green btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openEditForm(tableMeta.rowIndex)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-red btn-small-circle\"\r\n                                onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render(){\r\n\r\n        let { locationCount, table_query } = this.state\r\n        let tableOptions = {\r\n            ...options,\r\n            serverSide: true,\r\n            count: locationCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText : \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Lokasi\"}\r\n                            key={locationCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.createVisible && (\r\n                    <FormLocation\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormLocation\r\n                        type={\"update\"}\r\n                        data={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.savePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"save\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClick={this.handlePopUp.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Location","import React, { Component } from 'react'\r\nimport { Calendar } from 'react-date-range'\r\nimport moment from 'moment'\r\n\r\nclass Pages extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      datePicker: this.props.date,\r\n      dateField: this.props.date ? moment(this.props.date).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\",\r\n      dateContent: 'content',\r\n      calendarVisible: false\r\n    }\r\n  }\r\n\r\n  handleClickOutside(target) {\r\n    // // console.log(element)\r\n    // const outsideclickListener = event => {\r\n    //   if (!element.contains(event.target)) {\r\n    //     console.log('target', event.target)\r\n    //     this.setState({calendarVisible: !this.state.calendarVisible})\r\n    //     removeClickListener()\r\n    //   }\r\n    // }\r\n\r\n    // const removeClickListener = () => {\r\n    //   // this.setState({smallProfileClass: clActivePopup})\r\n    //   document.removeEventListener('click', outsideclickListener)\r\n    // }\r\n\r\n    // document.addEventListener('click', outsideclickListener)\r\n\r\n    var element = document.querySelector(target)\r\n\r\n    const outsideclickListener = (event) => {\r\n      if (!element.contains(event)) {\r\n        this.setState({calendarVisible: false}) \r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"click\", function (event) {\r\n      if (event.target.closest(target)) return\r\n      outsideclickListener()\r\n    })\r\n  }\r\n\r\n  clPlaceDate = () => {\r\n    // var element = document.getElementById('card-date-picker')\r\n    this.setState({dateContent: 'content'})\r\n  }\r\n\r\n  opPlaceDate = () => {\r\n    // var element = document.getElementsByClassName('card-date-picker')\r\n    // element.style.display = 'block'\r\n    this.setState({calendarVisible: !this.state.calendarVisible })\r\n    this.handleClickOutside('.card-date-picker')\r\n  }\r\n\r\n  handleChange = moment => {\r\n    console.log(moment)\r\n  }\r\n\r\n  handleSave = () => {\r\n    console.log('saved', this.state.datePicker)\r\n  }\r\n\r\n  handleSelectDate = (e) => {\r\n    this.props.onChange(e)\r\n    this.setState({\r\n      datePicker: e\r\n    })\r\n  }\r\n\r\n  clearDateField = () => {\r\n    this.setState({\r\n      // calendarVisible: false,\r\n      datePicker: false,\r\n      dateField: 'DD-MM-YYYY'\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.date !== prevProps.date) {\r\n      // const dt = (this.state.dateField !== undefined && this.state.dateField !== null && this.state.dateField !== \"\") ? moment(this.state.dateField).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\"\r\n      const dt = (this.state.datePicker !== undefined && this.state.datePicker !== null && this.state.datePicker !== \"\") ? moment(this.state.datePicker).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\"\r\n      this.setState({\r\n        datePicker: this.props.date,\r\n        dateField: dt\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"card-date-picker\" key={this.props.key}>\r\n        <div className=\"card-date-picker\" >\r\n          <div className=\"double\">\r\n            <div className=\"input\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"ip\"\r\n                readOnly\r\n                style={{ backgroundColor: this.props.disabled ? \"#E6E6E6\" : null }}\r\n                value={(this.state.datePicker !== undefined && this.state.datePicker !== null && this.state.datePicker !== \"\") ? moment(this.state.datePicker).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\"} />\r\n              {/*!this.props.disabled \r\n                ? <button \r\n                    type=\"button\"\r\n                    className=\"cl\" \r\n                    onClick={!this.props.disabled ? this.clearDateField : null}>\r\n                    <i className=\"fa fa-1x fa-times\" />\r\n                  </button>\r\n              : null*/}\r\n            </div>\r\n            {!this.props.disabled \r\n              ? <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-grey border-left btn-no-radius\"\r\n                  onClick={!this.props.disabled ? this.opPlaceDate : null}>\r\n                  <i className=\"fa fa-lg fa-calendar-alt\" />\r\n                </button> \r\n              : null}\r\n          </div>\r\n          {this.state.calendarVisible && \r\n          <div className={\"content active\"}>\r\n              <Calendar\r\n                date={this.state.datePicker}\r\n                onChange={this.handleSelectDate}\r\n                color=\"#004c97\" /> \r\n          </div>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Pages","import React, { Component } from \"react\"\r\nimport CalendarPicker from '../../modules/popup/Calendar'\r\n// import UploadFile from '../../modules/upload/upload'\r\nimport Dropzone from 'react-dropzone'\r\nimport Loader from 'react-loader-spinner'\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport MUIDataTable from \"mui-datatables-bitozen\"\r\nimport api from \"../../services/Api\"\r\n// import M from 'moment'\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nlet defaultPayload = {\r\n    \"accountNonExpired\": true,\r\n    \"accountNonLocked\": true,\r\n    \"address\": \"\",\r\n    \"birthDate\": \"\",\r\n    \"birthPlace\": \"\",\r\n    \"contactNumber\": \"\",\r\n    \"credentialsNonExpired\": true,\r\n    \"email\": \"\",\r\n    \"employeePhotoURL\": \"\",\r\n    \"enabled\": true,\r\n    \"firstName\": \"\",\r\n    \"id\": \"\",\r\n    \"lastName\": \"\",\r\n    \"nik\": \"\",\r\n    \"password\": \"\",\r\n    \"position\": {\r\n        \"id\": \"\",\r\n        \"positionName\": \"\"\r\n    },\r\n    \"role\": \"ROLE_USER\",\r\n    \"username\": \"\"\r\n}\r\n\r\nclass FormEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataDetail: props.payload \r\n                ? {\r\n                    ...props.payload,\r\n                    // birthDate: props.payload.birthDate ? M(props.payload.birthDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") : null,\r\n                }\r\n                : defaultPayload,\r\n            dataTablePosition: props.tablePosition ? props.tablePosition : [],\r\n            visiblePopupPosition: false,\r\n            loading: false,\r\n            imageUrl: ''\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable())\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Nama Jabatan\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-green btn-small\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openChoosePosition(tableMeta.rowData)\r\n                                }>\r\n                                PILIH\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    componentDidMount() {\r\n        console.log('mount', this.state.dataDetail)\r\n        this.getImageBlob(this.state.dataDetail.id, this.state.dataDetail.employeePhotoURL)\r\n    }\r\n\r\n    async getImageBlob(id, fileName) {\r\n        let payload = id+'/'+fileName\r\n        let res = await api.create(\"EMPLOYEE\").downloadFotoEmployee(payload)\r\n        if (res && res.status === 200) {\r\n            return this.setState({ \r\n                imageUrl: res.config.url\r\n            })\r\n        }\r\n        console.log(res)\r\n    }\r\n\r\n    async onDrop(acceptedFiles) {\r\n        const formData = new FormData()\r\n        formData.append('file', acceptedFiles[0])\r\n        formData.append('id', this.state.dataDetail.id)\r\n        let response = await api.create('EMPLOYEE').uploadFotoEmployee(formData)\r\n        if (response && response.status === 200) {\r\n            this.setState({\r\n                dataDetail: {\r\n                    ...this.state.dataDetail,\r\n                    employeePhotoURL: response.data.fileName\r\n                }\r\n            })\r\n            this.getImageBlob(this.state.dataDetail.id, response.data.fileName)\r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    onClickVisiblePosition = () => {\r\n        this.setState({\r\n            visiblePopupPosition: !this.state.visiblePopupPosition\r\n        })\r\n    }\r\n\r\n    openChoosePosition = (val) => {\r\n        let payload = {\r\n            \"id\": val[1],\r\n            \"positionName\": val[2]\r\n        }\r\n        this.setState({\r\n            dataDetail: {\r\n                ...this.state.dataDetail,\r\n                position: payload\r\n            }\r\n        })\r\n        this.onClickVisiblePosition()\r\n    }\r\n\r\n    renderPosition() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-small background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                Jabatan Pegawai\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.onClickVisiblePosition.bind(this)}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"padding-5px\">\r\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Jabatan Pegawai\"}\r\n                                data={this.state.dataTablePosition}\r\n                                columns={this.columns}\r\n                                options={this.options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-white\"\r\n                                    type=\"button\"\r\n                                    onClick={this.onClickVisiblePosition.bind(this)}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"padding-top-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderForm() {\r\n        let {dataDetail} = this.state\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Pegawai\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Pegawai\"\r\n                                        : \"View - Pegawai\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {this.props.type === \"edit\" ? (\r\n                        <div className=\"margin-30px\">\r\n                            <div className=\"width width-160px width-center\">\r\n                                <div\r\n                                    className=\"image image-160px image-circle margin-bottom-20px\"\r\n                                    style={{\r\n                                        margin: \"auto\",\r\n                                        backgroundColor: \"#f8f8f8\",\r\n                                    }}>\r\n                                    {this.state.loading && (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            style={{display:'flex', justifyContent:'center',marginTop:45}}\r\n                                            color={\"#somecolor\"}\r\n                                            height={80}\r\n                                            width={80}\r\n                                            loading={this.state.loading}\r\n                                    />\r\n                                    )}\r\n                                    {(this.state.imageUrl === \"\")\r\n                                        ? this.state.loading === true ? <i />\r\n                                        : (<i className=\"icn far fa-user fa-3x\" />)\r\n                                        : (<img src={this.state.imageUrl} alt=\"img\" />)\r\n                                    }\r\n                                </div>\r\n                                <div>\r\n                                    {this.props.type !== 'view'\r\n                                        ?\r\n                                        <button\r\n                                        className=\"btn btn-red btn-small-circle\"\r\n                                        type=\"button\"\r\n                                        align=\"center\"\r\n                                        style={{\r\n                                            position: \"absolute\",\r\n                                            bottom: \"30px\",\r\n                                            right: \"0\"\r\n                                        }}\r\n                                        >\r\n                                        <Dropzone onDrop={this.onDrop.bind(this)}>\r\n                                            {({ getRootProps, getInputProps }) => (\r\n                                            <div {...getRootProps()}>\r\n                                                <input {...getInputProps()} />\r\n                                                <i className=\"fa fa-lw fa-pencil-alt\"></i>\r\n                                            </div>\r\n                                            )}\r\n                                        </Dropzone>\r\n                                        </button>\r\n                                        : null}\r\n                                </div>\r\n                                <div style={{ textAlign: \"center\" }}>\r\n                                    <span style={{ color: \"red\", fontSize: 11, marginBottom: 5 }}>*Image max 1Mb</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <form \r\n                        action=\"#\" \r\n                        onSubmit={(e) => { \r\n                            e.preventDefault() \r\n                            this.props.onSave(this.state.dataDetail) \r\n                        }}>\r\n                            \r\n                        <div className=\"border-bottom padding-15px grid grid-2x grid-mobile-none gap-20px\">\r\n                            <div className=\"col-1\">\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Name Depan\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    firstName: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.firstName}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Name Belakang\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    lastName: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.lastName}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Tempat Lahir\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    birthPlace: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.birthPlace}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Tanggal Lahir\r\n                                        </span>\r\n                                    </div>\r\n                                    <CalendarPicker\r\n                                        date={dataDetail.birthDate}\r\n                                        disabled={this.props.type === 'view' ? true : false}\r\n                                        onChange={e => this.setState({\r\n                                            dataDetail: {\r\n                                                ...this.state.dataDetail,\r\n                                                birthDate: e\r\n                                            }\r\n                                        })} />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Username\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    username: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.username}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Password\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    password: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.password}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-2\">\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Jabatan\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-date-picker\" >\r\n                                        <div className=\"double\">\r\n                                            <div className=\"input\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"ip\"\r\n                                                value={dataDetail.position.positionName}\r\n                                                readOnly />\r\n                                            </div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-grey border-left btn-no-radius\"\r\n                                                onClick={this.onClickVisiblePosition.bind(this)}>\r\n                                                <i className=\"fa fa-lg fa-search\" />\r\n                                            </button> \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Role\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    role: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.role}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Alamat\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    address: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.address}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Nomor Telpon\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    contactNumber: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.contactNumber}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Email\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"email\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    email: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.email}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            NIK\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"number\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    nik: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.nik}\r\n                                    />\r\n                                </div>\r\n                                {/* {this.props.type === \"edit\" ? <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Upload foto\r\n                                        </span>\r\n                                    </div>\r\n                                    <UploadFile\r\n                                        type={this.state.uploadStatus}\r\n                                        percentage={this.state.percentage} \r\n                                        result={false}\r\n                                        acceptedFiles={['png','jpg','jpeg']}\r\n                                        onHandle={(dt) => {\r\n                                            this.handleChange(dt)\r\n                                        }}\r\n                                        onUpload={() => {\r\n                                          this.uploadDocument()  \r\n                                        }}\r\n                                    />\r\n                                </div> : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-green\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-white\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n                <div className=\"padding-top-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let {visiblePopupPosition} = this.state\r\n        return (\r\n            <div>\r\n                { this.renderForm() }\r\n                {\r\n                    visiblePopupPosition && (\r\n                        this.renderPosition()\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormEmployee","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport api from \"../../services/Api\";\r\nimport FormEmployee from \"./formEmployee\";\r\nimport M from 'moment';\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nclass Employee extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rawData: [],\r\n            dataTable: [],\r\n            rawDataPosition: [],\r\n            dataTablePosition: [],\r\n            deletePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false,\r\n            deletePopUpVisible: false,\r\n            selectedIndex: 0,\r\n            limit: 5,\r\n            number: 0,\r\n            table_query: \"\",\r\n            positionCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startFetch()\r\n        this.getData(this.state.limit, this.state.number)\r\n        this.getDataPosition()\r\n        this.getCountData()\r\n    }\r\n\r\n    async getDataPosition() {\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('POSITION').getAllPosition(param)\r\n        if (response.status === 200) {\r\n            let dataTablePosition = response.data.map((value, index) => {\r\n                const { id, positionName } = value;\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    positionName\r\n                ]\r\n            })\r\n\r\n            this.setState({\r\n                rawDataPosition: response.data,\r\n                dataTablePosition\r\n            })\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n    }\r\n\r\n    async getCountData() {\r\n\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('EMPLOYEE').getAllPagingEmployee(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                positionCount: response.data.length\r\n            })\r\n        }\r\n\r\n        console.log(response)\r\n    }\r\n\r\n    async getData(limit, number) {\r\n        let params = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('EMPLOYEE').getAllEmployee(params)\r\n        if (response.status == 200) {\r\n            let dataTable = response.data.map((value, index) => {\r\n                let {id, nik, firstName, lastName, email, contactNumber, address} = value\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    nik,\r\n                    firstName + ' ' + lastName,\r\n                    email,\r\n                    contactNumber,\r\n                    address\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n            // console.log('succ', response)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n            this.onFinishFetch()\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            ...data,\r\n            birthDate: M(data.birthDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        console.log(payload)\r\n        let response = await api.create('EMPLOYEE').postEmployee(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ createVisible: false, editVisible: false })\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        let payload = {\r\n            ...data,\r\n            birthDate: M(data.birthDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        let response = await api.create('EMPLOYEE').putEmployee(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ createVisible: false, editVisible: false })\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    handleDelete = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n        }\r\n        let response = await api.create('EMPLOYEE').deleteEmployee(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ deletePopUpVisible: false })\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(payload)\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n \r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"NIK\",\r\n        \"Nama\",\r\n        \"Email\",\r\n        \"No. Telpon\",\r\n        \"Alamat\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div className=\"display-flex-normal\">\r\n                            <button\r\n                                className=\"btn btn-green btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openEditForm(tableMeta.rowIndex)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-red btn-small-circle\"\r\n                                onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n        let {positionCount, table_query} = this.state\r\n        let tableOptions = {\r\n            ...this.options,\r\n            serverSide: true,\r\n            count: positionCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText : \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Pegawai\"}\r\n                            key={positionCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n\r\n                {this.state.createVisible && (\r\n                    <FormEmployee\r\n                        type={\"create\"}\r\n                        tablePosition={this.state.dataTablePosition}\r\n                        onClickClose={this.openCreateForm}\r\n                        onSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormEmployee\r\n                        type={\"edit\"}\r\n                        tablePosition={this.state.dataTablePosition}\r\n                        payload={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport api from \"../../services/Api\";\r\nimport M from 'moment';\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nclass Attendance extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rawData: [],\r\n            dataTable: [],\r\n            deletePopUpVisible: false,\r\n            selectedIndex: 0,\r\n            limit: 5,\r\n            number: 0,\r\n            table_query: \"\",\r\n            positionCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.limit, this.state.number)\r\n        this.getCountData()\r\n    }\r\n\r\n    async getCountData() {\r\n\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('EMPLOYEE').getAllAttendance(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                positionCount: response.data.length\r\n            })\r\n        }\r\n\r\n        console.log(response)\r\n    }\r\n\r\n    async getData(limit, number) {\r\n        let params = {\r\n            pageLimit: limit,\r\n            pageNumber: number\r\n        }\r\n\r\n        let response = await api.create('ATTENDANCE').getAllPagingAttendance(params)\r\n        if (response.status == 200) {\r\n            let dataTable = response.data.map((value, index) => {\r\n                let {id,attendanceDate, employee, attendanceStatus, description, checkin, checkout} = value\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    employee.firstName + ' ' + employee.lastName,\r\n                    attendanceDate,\r\n                    attendanceStatus,\r\n                    description,\r\n                    checkin,\r\n                    checkout\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n            // console.log('succ', response)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n            this.onFinishFetch()\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Nama\",\r\n        \"Tanggal Absen\",\r\n        \"Status Absen\",\r\n        \"Deskripsi\",\r\n        \"Check In\",\r\n        \"Check Out\"\r\n        // {\r\n        //     name: \"Action\",\r\n        //     options: {\r\n        //         customBodyRender: (val, tableMeta) => {\r\n        //             return (\r\n        //                 <div className=\"display-flex-normal\">\r\n        //                     <button\r\n        //                         className=\"btn btn-green btn-small-circle\"\r\n        //                         style={{ marginRight: 5 }}\r\n        //                         onClick={() => alert('ahuy')}\r\n        //                     >\r\n        //                         <i className=\"fa fa-lw fa-pencil-alt\" />\r\n        //                     </button>\r\n        //                     <button\r\n        //                         className=\"btn btn-red btn-small-circle\"\r\n        //                         onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n        //                         <i className=\"fa fa-lw fa-trash-alt\" />\r\n        //                     </button>\r\n        //                 </div>\r\n        //             )\r\n        //         }\r\n        //     }\r\n        // }\r\n    ]\r\n\r\n    render() {\r\n        let {positionCount, table_query} = this.state\r\n        let tableOptions = {\r\n            ...this.options,\r\n            serverSide: true,\r\n            count: positionCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText : \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Absensi\"}\r\n                            key={positionCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            // buttonCreate={false}\r\n                            // onCreate={() => {alert('ahuy')}}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance","import React, { Component } from \"react\"\r\nimport api from \"../../services/Api\"\r\nimport CalendarPicker from '../../modules/popup/Calendar'\r\nimport M from 'moment'\r\n\r\nclass Report extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rawData: [],\r\n            dataTable: [],\r\n            roomName: '',\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllPagingRoom()\r\n    }\r\n\r\n    async getAllPagingRoom(){\r\n        let param = {\r\n            pageLimit: 1000,\r\n            pageNumber: 0\r\n        }\r\n\r\n        let response = await api.create('ROOM').getAllPagingRoom(param)\r\n        if(response.status === 200){\r\n            let dataTable = response.data.map((value, index) => {\r\n                const { id, roomName } = value;\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    roomName\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            // this.onFinishFetch()\r\n        } else {\r\n            // this.onFinishFetch()\r\n        }\r\n\r\n        console.log(response)\r\n    }\r\n\r\n    async downloadReport() {\r\n        let {roomName, startDate, endDate} = this.state\r\n        let payload = '?roomName='+roomName+'&startDate='+startDate+'&endDate='+endDate\r\n        let response = await api.create('REPORT').downloadReport(payload)\r\n        if (response && response.status === 200) {\r\n            \r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"display-flex-normal\">\r\n                    <div className=\"width width-all\">\r\n                        <div className=\"margin-bottom-15px\">\r\n                            <div className=\"margin-5px\">\r\n                                <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                    Nama Ruangan\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <select \r\n                                    id=\"room-name\" \r\n                                    className=\"txt txt-sekunder\"\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            roomName: e.target.value\r\n                                        })\r\n                                    }}>\r\n                                    {this.state.rawData.map((data) => {\r\n                                        return (\r\n                                            <option value={data.roomName}>\r\n                                                { data.roomName }\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"width width-all\">\r\n                        <div className=\"margin-bottom-15px\">\r\n                            <div className=\"margin-5px\">\r\n                                <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                    Tanggal Mulai\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <CalendarPicker\r\n                                    date={this.state.startDate ? M(this.state.startDate, 'DD/MM/YYYY').format('YYYY-MM-DD') : ''}\r\n                                    onChange={e => {\r\n                                        let newTgl = M(e).format('DD/MM/YYYY')\r\n                                        this.setState({\r\n                                            startDate: newTgl\r\n                                        })\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"width width-all\">\r\n                        <div className=\"margin-bottom-15px\">\r\n                            <div className=\"margin-5px\">\r\n                                <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                    Tanggal Akhir\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <CalendarPicker\r\n                                    date={this.state.endDate ? M(this.state.endDate, 'DD/MM/YYYY').format('YYYY-MM-DD') : ''}\r\n                                    onChange={e => {\r\n                                        let newTgl = M(e).format('DD/MM/YYYY')\r\n                                        this.setState({\r\n                                            endDate: newTgl\r\n                                        })\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"width width-all content-right\">\r\n                    <button className=\"btn btn-green\" type=\"button\" onClick={() => this.downloadReport()}>\r\n                        <i className=\"fa fa-1x fa-print margin-right-5px\" />\r\n                        DOWNLOAD LAPORAN\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Report","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, NavLink, HashRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from './components/login/login'\r\nimport QrCode from './components/qrcode/qrcode'\r\nimport Home from './components/dashboard/home'\r\nimport ProfilePopup from './modules/popup/Profile'\r\nimport './App.css';\r\nimport Position from './components/position/position'\r\nimport Room from './components/room/room'\r\nimport Schedule from './components/schedule/schedule'\r\nimport Location from './components/location/location'\r\nimport Employee from './components/employee/employee'\r\nimport Attendance from './components/attendance/attendance'\r\nimport Report from './components/report/report'\r\n\r\n// icon\r\nlet angle = 'fa fa-lg fa-angle-right'\r\n\r\n// sub menu\r\nlet opSubMenu = 'app-menu app-submenu-themes app-submenu'\r\n\r\nlet opMenu = 'list'\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n\r\n    super()\r\n    this.state = {\r\n      appClass: 'app', //app-side-big-icon\r\n      appButtonClass: 'fa fa-lg fa-bars',\r\n      travelClass: opMenu,\r\n      travelSubmenu: opSubMenu,\r\n      travelMoreIcon: angle,\r\n      timeClass: opMenu,\r\n      timeSubmenu: opSubMenu,\r\n      timeMoreIcon: angle,\r\n      leaveClass: opMenu,\r\n      leaveSubmenu: opSubMenu,\r\n      leaveMoreIcon: angle,\r\n      overtimeClass: opMenu,\r\n      overtimeSubmenu: opSubMenu,\r\n      overtimeMoreIcon: angle,\r\n      employeeClass: opMenu,\r\n      employeeSubmenu: opSubMenu,\r\n      employeeMoreIcon: angle,\r\n    }\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.auth.id !== this.props.auth.id) {\r\n      setTimeout(() => {\r\n          this.props.onLogoOut(nextProps.auth.id) \r\n      }, 60000) //one minute \r\n  \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter history={Router.browserHistory}>\r\n         \r\n        <div>\r\n          {/* Single Page */}\r\n          <div className=\"app\">\r\n            <Route exact path=\"/\" component={Login} />\r\n          </div>\r\n          <div className=\"app\">\r\n            <Route exact path=\"/qrcode\" component={QrCode} />\r\n          </div>\r\n\r\n          {/* Multiple Page */}\r\n          <div className={this.state.appClass}>\r\n            <div className=\"app-slide\">\r\n              <div className=\"slide-content background-green\">\r\n                <div className=\"app-title\">\r\n                  <div className=\"col-1\">\r\n                    <h1 className=\"txt-site txt-white txt-upp txt-18 txt-bold post-center margin-left-10px\">\r\n                      ATTENDANCE\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <button\r\n                      className=\"btn btn-grey btn-circle\"\r\n                      onClick={this.opSlide}>\r\n                      <i className={this.state.appButtonClass} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {/* menu */}\r\n                <div className=\"slide-list change-scrollbar\">\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-dashboard\" />\r\n                    <NavLink to='/home'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-home\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          DASHBOARD\r\n                            </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-position\" />\r\n                    <NavLink to='/position'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-random\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          JABATAN\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-schedule\" />\r\n                    <NavLink to='/room'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-building\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          RUANGAN\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-room\" />\r\n                    <NavLink to='/schedule'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-calendar\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          JADWAL\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-room\" />\r\n                    <NavLink to='/location'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-calendar\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          LOKASI\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-room\" />\r\n                    <NavLink to='/employee'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-users\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          PEGAWAI\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-room\" />\r\n                    <NavLink to='/attendance'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-clock\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          ABSENSI\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className=\"app-space\">\r\n                    <input type=\"radio\" name=\"mainmenu\" id=\"mainmenu-room\" />\r\n                    <NavLink to='/report'>\r\n                      <label htmlFor=\"mainmenu-dashboard\" className=\"list\">\r\n                        <span className=\"app-space-icon\">\r\n                          <i className=\"fa fa-1x fa-file\" />\r\n                        </span>\r\n                        <span className=\"app-space-text\">\r\n                          LAPORAN\r\n                        </span>\r\n                      </label>\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"app-main\">\r\n              <div className=\"app-panel\">\r\n                <div className=\"panel-content\">\r\n\r\n                  <div className=\"col-1\">\r\n                    <div className=\"app-mobile\">\r\n                      <button className=\"btn btn-circle btn-primary\">\r\n                        <i className=\"fa fa-lg fa-search\" />\r\n                      </button>\r\n                    </div>\r\n                    {/* <div className=\"app-desktop\">\r\n                      <SearchPopup />\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"col-2 content-right\">\r\n                    <div className=\"panel-button\">\r\n                      <ProfilePopup />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"app-place\">\r\n                <Route exact path=\"/home\" component={Home} />\r\n                <Route exact path=\"/position\" component={Position} />\r\n                <Route exact path=\"/room\" component={Room} />\r\n                <Route exact path=\"/schedule\" component={Schedule} />\r\n                <Route exact path=\"/location\" component={Location} />\r\n                <Route exact path=\"/employee\" component={Employee} />\r\n                <Route exact path=\"/attendance\" component={Attendance} />\r\n                <Route exact path=\"/report\" component={Report} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tauth: state.auth\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const eventTrackMiddleware = store => next => action => {\r\n    // console.warn('dispatching', action)\r\n    let actionType = action.type;\r\n    if(actionType) {   \r\n        if (typeof action.error == \"string\") {\r\n            alert(action.error);\r\n        }\r\n    }\r\n\r\n    let result = next(action);\r\n    // console.warn('next state', store.getState())\r\n    return result;\r\n}\r\n\r\nexport default eventTrackMiddleware;","import { call, put } from 'redux-saga/effects';\r\nimport AuthActions from '../redux/AuthRedux';\r\nimport { isEmpty } from 'ramda';\t\r\n\r\nexport function* getAuth(api, action) {\r\n\tconst { data } = action;\r\n    const response = yield call(api.userAuth, data);\r\n\r\n\tif (typeof atob !== 'undefined') {\r\n\t\tconsole.log('===> ', response);\r\n\t\tconsole.log('^^^ GET AUTH ^^^');\r\n    }\r\n    \r\n\tif (response.ok && response.data && !isEmpty(response.data.token)) {\r\n        const response_detail = yield call(api.getUserDetail, response.data.token);\r\n        let payload = {\r\n            ...response.data,\r\n            ...response_detail.data\r\n\t\t}\r\n\t\tconsole.info(payload);\r\n\t\tlocalStorage.setItem(\"access_token\", payload.token);\r\n\t\tconst userInfo = {\r\n\t\t\tisLoggedIn:true,\r\n\t\t\tusername:payload.username,\r\n\t\t\tavatar:payload.employeePhotoURL,\r\n\t\t\t\r\n\t\t};\r\n\t\tlocalStorage.setItem(\"user_info\",JSON.stringify(userInfo));\r\n        yield put(AuthActions.authSuccess(payload));\r\n\t} else {\r\n\t\tif (response.data && response.data.status === 500) {\r\n\t\t\treturn yield put(AuthActions.authFailure({\r\n\t\t\t\tpath: 'Sign In',\r\n\t\t\t\tmessage: response.data.message, response\r\n\t\t\t}));\r\n\t\t}\r\n\t\tyield put(AuthActions.authFailure('Username atau Password Salah !'));\r\n\t}\r\n}","import { takeLatest, all } from 'redux-saga/effects';\r\nimport API from '../services/Api';\r\n\r\nimport { AuthTypes } from '../redux/AuthRedux';\r\nimport { getAuth } from './AuthSagas';\r\n\r\nconst empApi = API.create('USERAUTH');\r\n\r\nexport default function* root() {\r\n\tyield all([\r\n        takeLatest(AuthTypes.AUTH_REQUEST, getAuth, empApi),\r\n\r\n    ]);\r\n}","import * as R from 'ramda'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n// is this object already Immutable?\r\nconst isImmutable = R.has('asMutable')\r\n\r\n// change this Immutable object into a JS object\r\nconst convertToJs = (state) => state.asMutable({deep: true})\r\n\r\n// optionally convert this object into a JS object if it is Immutable\r\nconst fromImmutable = R.when(isImmutable, convertToJs)\r\n\r\n// convert this JS object into an Immutable object\r\nconst toImmutable = (raw) => Immutable(raw)\r\n\r\n// the transform interface that redux-persist is expecting\r\nexport default {\r\n  out: (state) => {\r\n    // console.log({ retrieving: state })\r\n    return toImmutable(state)\r\n  },\r\n  in: (raw) => {\r\n    // console.log({ storing: raw })\r\n    return fromImmutable(raw)\r\n  }\r\n}","import immutablePersistenceTransform from '../services/ImmutablePersistenceTransform'\r\n// import { AsyncStorage } from 'AsyncStorage';\r\nimport storageSession from 'redux-persist/lib/storage/session'\r\n\r\n// More info here:  https://shift.infinite.red/shipping-persistant-reducers-7341691232b1\r\nconst REDUX_PERSIST = {\r\n\tactive: true,\r\n\treducerVersion: '1.0',\r\n\tstoreConfig: {\r\n\t\tkey: 'primary',\r\n\t\tstorage: storageSession,\r\n\t\twhitelist: ['auth'],\r\n\t\ttransforms: [immutablePersistenceTransform]\r\n\t}\r\n};\r\n\r\nexport default REDUX_PERSIST ;\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport configureStore from './createstore';\r\nimport rootSaga from '../sagas';\r\nimport ReduxPersist from '../config/reduxpersist';\r\nimport { persistStore } from 'redux-persist'\r\n\r\nexport const reducers = combineReducers({\r\n\tauth: require('./AuthRedux').reducer\r\n});\r\n\r\nexport default () => {\r\n\tlet finalReducers = reducers;\r\n\t// If rehydration is on use persistReducer otherwise default combineReducers\r\n\tif (ReduxPersist.active) {\r\n\t\tconst persistConfig = ReduxPersist.storeConfig;\r\n\t\tfinalReducers = persistReducer(persistConfig, reducers);\r\n\t}\r\n\r\n\tlet { store, sagasManager, sagaMiddleware } = configureStore(finalReducers, rootSaga);\r\n\r\n\tif (module.hot) {\r\n\t\tmodule.hot.accept(() => {\r\n\t\t\tconst nextRootReducer = require('.').reducers;\r\n\t\t\tstore.replaceReducer(nextRootReducer);\r\n\r\n\t\t\tconst newYieldedSagas = require('../sagas').default;\r\n\t\t\tsagasManager.cancel();\r\n\t\t\tsagasManager.done.then(() => {\r\n\t\t\t\tsagasManager = sagaMiddleware.run(newYieldedSagas);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n    let persistor = persistStore(store);\r\n\r\n\treturn { store, persistor };\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport EventTrackMiddleware from './eventtrackmiddleware';\r\nimport createSagaMiddleware from 'redux-saga';\r\n// import { loadState, saveState } from './sessionStorage';\r\n\r\nexport default (rootReducer, rootSaga) => {\r\n    const middleware = [];\r\n    const enhancers = [];\r\n\r\n    middleware.push(EventTrackMiddleware);\r\n\r\n    const sagaMonitor = null;\r\n    const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\r\n    middleware.push(sagaMiddleware);\r\n\r\n    enhancers.push(applyMiddleware(...middleware));\r\n\r\n    // const persistedState = loadState();\r\n    const store = createStore(rootReducer, compose(...enhancers));\r\n\r\n    // store.subscribe(() => {\r\n    //     saveState(store.getState());\r\n    // });\r\n\r\n    let sagasManager = sagaMiddleware.run(rootSaga);\r\n\r\n    return {\r\n        store,\r\n        sagasManager,\r\n        sagaMiddleware\r\n    };\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/icons/fontawesome/css/all.min.css'\r\nimport './assets/sass/app.css'\r\nimport './assets/css/circle.css'\r\nimport 'input-moment/dist/input-moment.css'\r\nimport 'react-times/css/material/default.css'\r\nimport 'react-times/css/classic/default.css'\r\nimport 'react-date-range/dist/styles.css'\r\nimport 'react-date-range/dist/theme/default.css'\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport createStore from './redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nconst { store, persistor } = createStore()\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n    </PersistGate>\r\n</Provider>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.9e1c415e.jpg\";","import { createReducer, createActions } from 'reduxsauce';\r\nimport Immutable from 'seamless-immutable';\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\n\r\nconst { Types, Creators } = createActions({\r\n\tauthRequest: ['data'],\r\n\tauthSuccess: ['payload'],\r\n\tauthFailure: ['error'],\r\n\tauthLogout: [],\r\n\tauthUserUpdate: ['data'],\r\n\tauthLoginCheck: null\r\n});\r\n\r\nexport const AuthTypes = Types;\r\nexport default Creators;\r\n\r\n/* ------------- Initial State ------------- */\r\n\r\nexport const INITIAL_STATE = Immutable({\r\n\tfetching: null,\r\n\terror: null,\r\n\tuser: null\r\n});\r\n\r\n/* ------------- Selectors ------------- */\r\n\r\nexport const AuthSelectors = {\r\n\tgetData: state => state.data\r\n};\r\n\r\n/* ------------- Reducers ------------- */\r\n\r\n// request the data from an api\r\nexport const request = (state, { data }) => state.merge({ fetching: true, error: null, user: null });\r\n\r\n// successful api lookup\r\nexport const success = (state, action) => {\r\n\tconst { payload } = action;\r\n\treturn state.merge({ fetching: false, error: null, user: payload });\r\n};\r\n\r\n// Something went wrong somewhere.\r\nexport const failure = (state, { error }) => state.merge({ fetching: false, error });\r\n\r\nexport const logout = state => state.merge({ fetching: false, error: null, user: null });\r\n\r\nexport const userUpdate = (state, { data }) => state.merge({ fetching: true, error: null });\r\n\r\nexport const authLoginCheck = state => state.merge({ fetching: false });\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n\t[Types.AUTH_REQUEST]: request,\r\n\t[Types.AUTH_SUCCESS]: success,\r\n\t[Types.AUTH_FAILURE]: failure,\r\n\t[Types.AUTH_LOGOUT]: logout,\r\n\t[Types.AUTH_USER_UPDATE]: userUpdate,\r\n\t[Types.AUTH_LOGIN_CHECK]: authLoginCheck\r\n});","var mainColor = \"#fff\"\r\nvar secondColor = \"#f6f6f6\"\r\n\r\nexports.customTable = function () {\r\n  return {\r\n      typography: {\r\n        useNextVariants: true,\r\n      },\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            position: 'relative',\r\n            width: '100% !important',\r\n            boxShadow: \"0 0 0 0 rgba(154,161,171,.15)\",\r\n            border: \"1px rgba(0,0,0,0.1) solid\",\r\n            borderRadius: \"5px\",\r\n            overflow: \"hidden\",\r\n          },\r\n          responsiveScroll: {\r\n            position: 'relative',\r\n            width: '100% !important',\r\n          }\r\n        },\r\n        MuiToolbar: {\r\n          root: {\r\n            position: 'relative',\r\n          }\r\n        },\r\n        MUIDataTableToolbar: {\r\n          root: {\r\n            position: 'relative',\r\n            backgroundColor: mainColor,\r\n          },\r\n          titleText: {\r\n            color: \"#555\"\r\n          },\r\n          icon: {\r\n            color: \"#555 !important\"\r\n          },\r\n          iconActive: {\r\n            color: \"#555 !important\"\r\n          },\r\n          left: {\r\n            flex: \"0 0 auto !important\"\r\n          },\r\n          actions: {\r\n            flex: \"1 0 auto !important\"\r\n          }\r\n        },\r\n        MUIDataTableSearch: {\r\n          main: {\r\n            position: 'relative',\r\n            // top: \"7px\",\r\n            right: \"-95px\",\r\n            width: \"100% !important\",\r\n            backgroundColor: mainColor,\r\n            zIndex: \"10\",\r\n            textAlign: \"right\",\r\n            display: \"block\",\r\n          },\r\n          searchIcon: {\r\n            width: \"50px !important\",\r\n            color: \"#555 !important\",\r\n            display: \"inline-block\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          searchText: {\r\n            width: \"calc(100% - 120px) !important\",\r\n            marginRight: \"10px\",\r\n            color: \"#555 !important\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          clearIcon: {\r\n            width: \"50px !important\",\r\n            color: \"#555 !important\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n        },\r\n        MUIDataTableHead: {\r\n          main: {\r\n            position: 'relative',\r\n            backgroundColor: mainColor,\r\n            color: \"#555\"\r\n          }\r\n        },\r\n        MUIDataTableHeadRow: {\r\n          root: {\r\n            position: 'relative',\r\n            backgroundColor: mainColor,\r\n          }\r\n        },\r\n        MUIDataTableHeadCell: {\r\n          root: {\r\n            fontSize: \"10pt\",\r\n            fontWeight: \"500\",\r\n            color: \"#555\",\r\n          },\r\n          fixedHeader: {\r\n            position: \"relative\",\r\n            borderBottom: \"1px rgba(0,0,0,0.1) solid\",\r\n            backgroundColor: secondColor,\r\n            color: \"#555\",\r\n            padding: \"10px\",\r\n            height: \"auto\"\r\n          },\r\n          toolButton: {\r\n            display: \"flex\",\r\n            height: \"auto\",\r\n          },\r\n          data: {\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          sortActive: {\r\n            color: \"#555\"\r\n          },\r\n          sortAction: {\r\n            color: \"#555\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            MuiButtonBase: {\r\n              color: \"#555\",\r\n              root: {\r\n                color: \"#555\",\r\n              }\r\n            }\r\n          }\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          root: {\r\n            position: 'relative',\r\n            fontSize: \"8pt\",\r\n            padding: \"10px\"\r\n          }\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          headerCell: {\r\n            backgroundColor: secondColor,\r\n            checkboxRoot: {\r\n              color: \"#555\",\r\n            }\r\n          },\r\n          checkboxRoot: {\r\n            color: \"#555\"\r\n          }\r\n        },\r\n        MuiInput: {\r\n          root: {\r\n            top: \"5px\",\r\n            color: \"#555 !important\",\r\n          },\r\n          underline: {\r\n            borderBottom: \"1px #555 solid !important\",\r\n          }\r\n        },\r\n        MuiSelect: {\r\n          root: {\r\n            top: \"0\",\r\n            color: \"#555 !important\",\r\n          },\r\n        }\r\n        // MuiIconButton: {\r\n        //   root: {\r\n        //     color: \"#fff !important\",\r\n        //   }\r\n        // }\r\n      }\r\n    }\r\n}\r\n\r\nexports.customTable2 = function () {\r\n  return {\r\n      typography: {\r\n        useNextVariants: true,\r\n      },\r\n      overrides: {\r\n        MUIDataTable: {\r\n          root: {\r\n            backgroundColor: secondColor,\r\n          },\r\n          paper: {\r\n            boxShadow: \"0 0 30px 0 rgba(154,161,171,.15)\",\r\n            border: \"1px rgba(0,0,0,0.1) solid\",\r\n            borderRadius: \"5px\",\r\n            overflow: \"hidden\",\r\n          },\r\n        },\r\n        MuiToolbar: {\r\n          root: {\r\n            left: {\r\n              flex: \"0 0 auto !important\"\r\n            },\r\n            actions: {\r\n              flex: \"0 0 auto !important\"\r\n            }\r\n          }\r\n        },\r\n        MUIDataTableToolbar: {\r\n          root: {\r\n            backgroundColor: secondColor,\r\n          },\r\n          titleText: {\r\n            color: \"#555\"\r\n          },\r\n          icon: {\r\n            color: \"#555\"\r\n          },\r\n        },\r\n        MUIDataTableSearch: {\r\n          searchIcon: {\r\n            color: \"#555\"\r\n          },\r\n          searchText: {\r\n            color: \"#555\",\r\n          },\r\n          clearIcon: {\r\n            color: \"#555\"\r\n          },\r\n        },\r\n        MUIDataTableHead: {\r\n          main: {\r\n            backgroundColor: mainColor,\r\n            color: \"#555\"\r\n          }\r\n        },\r\n        MUIDataTableHeadRow: {\r\n          root: {\r\n            backgroundColor: mainColor,\r\n          }\r\n        },\r\n        MUIDataTableHeadCell: {\r\n          root: {\r\n            fontSize: \"10pt\",\r\n            fontWeight: \"500\",\r\n            color: mainColor,\r\n          },\r\n          fixedHeader: {\r\n            position: \"relative\",\r\n            backgroundColor: secondColor,\r\n            color: \"#555\",\r\n            padding: \"10px\",\r\n            height: \"auto\"\r\n          },\r\n          toolButton: {\r\n            display: \"flex\",\r\n            height: \"auto\"\r\n          },\r\n          data: {\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          sortActive: {\r\n            color: \"#555\"\r\n          },\r\n          sortAction: {\r\n            color: \"#555\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            MuiButtonBase: {\r\n              color: \"#555\",\r\n              root: {\r\n                color: \"#555\",\r\n              }\r\n            }\r\n          }\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          root: {\r\n            fontSize: \"10pt\",\r\n            padding: \"10px\"\r\n          }\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          headerCell: {\r\n            backgroundColor: secondColor,\r\n            checkboxRoot: {\r\n              color: \"#fff\",\r\n            }\r\n          },\r\n          checkboxRoot: {\r\n            color: \"#555\"\r\n          }\r\n        },\r\n      }\r\n    }\r\n}\r\n\r\nexports.customOptions = function () {\r\n  return {\r\n    // selectableRows: false,\r\n    selectableRows: 'none',\r\n    filterType: 'multiselect',\r\n    responsive: 'scroll',\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20, 50],\r\n    print: false,\r\n    download: false,\r\n    elevation: 5,\r\n    filter: false,\r\n    viewColumns: false\r\n  }\r\n}\r\n\r\nexports.customOptions2 = function () {\r\n  return {\r\n    selectableRows: true,\r\n    filterType: 'dropdown',\r\n    responsive: 'scroll',\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20, 50],\r\n    print: false,\r\n    download: false,\r\n    elevation: 5,\r\n  }\r\n}\r\n\r\nexports.customOptions3 = function () {\r\n  return {\r\n    selectableRows: true,\r\n    filterType: 'dropdown',\r\n    responsive: 'scroll',\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20, 50],\r\n    print: false,\r\n    download: false,\r\n    sort: true,\r\n    elevation: 5,\r\n  }\r\n}"],"sourceRoot":""}